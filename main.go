// http://en.wikipedia.org/wiki/Conway's_Game_of_Life

package main

import (
	"flag"

	"github.com/mdwhatcott/golife/life"
	"github.com/mdwhatcott/golife/ui"
)

func main() {
	config := new(ui.Config)
	initialize(config)
	config.RunSimulation()
}

func initialize(config *ui.Config) {
	flag.StringVar(&config.Animation, "animate", "console",
		"Values: console|ip:port|[blank] "+
			"(Display each step in browser at 'ip:port', "+
			"display each step in 'console', "+
			"or show only final state in console if left [blank].)")
	flag.IntVar(&config.Iterations, "iterations", 0xffffffff, "How many iterations to simulate?")
	grid := flag.String("grid", gliderGun, "The starting grid state. (default: 'glider gun')")
	flag.Parse()

	config.Grid = life.New(*grid)
}

const gliderGun = `
------------------------x--------------------
----------------------x-x--------------------
------------xx------xx------------xx---------
-----------x---x----xx------------xx---------
xx--------x-----x---xx-----------------------
xx--------x---x-xx----x-x--------------------
----------x-----x-------x--------------------
-----------x---x-----------------------------
------------xx-------------------------------
---------------------------------------------
---------------------------------------------
---------------------------------------------
---------------------------------------------
---------------------------------------------
---------------------------------------------
---------------------------------------------
---------------------------------------------
---------------------------------------------
---------------------------------------------
---------------------------------------------
---------------------------------------------
---------------------------------------------
---------------------------------------------
---------------------------------------------
---------------------------------------------
---------------------------------------------
---------------------------------------------
---------------------------------------------
---------------------------------------------
---------------------------------------------
---------------------------------------------
---------------------------------------------
`
